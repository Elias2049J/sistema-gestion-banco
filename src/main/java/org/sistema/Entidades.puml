@startuml
'https://plantuml.com/class-diagram

class Cuenta {
    -idCuenta
    -saldo
    -tipoCuenta
    -cliente
}
class Cliente {
    - idCliente
    - direccion
    -cuentas
}

class Corriente {
-limiteSobreGiros
}
class Ahorro {
-tasaInteres
}
class Natural {
-nombre
-apellido
-dni
}
class Empresa {
-razonSocial
-ruc
}

class ClienteRepository {
}
class CuentaRepository {
}
class Persistencia<T> {
#getFilePath(): String
#parsearLinea(): T
#getCabecera(): String
#formatObjeto(): String
}
class Repository {
}
class PersistenciaCliente
class PersistenciaCuenta
class GestionClienteModel
class GestionCuentaModel

interface RepositoryInterface<T, ID> {
+save(T object): boolean
+getById(ID id): T
+delete(ID id): boolean
+findAll(): List<T>
}
interface PersistenciaInterface<T> {
+importarLista(List<T> lista): boolean
+exportarLista(List<T> lista): boolean
}
interface GestionUseCase<T, ID> {
+crear(T object): boolean
+update(T object): boolean
+getById(ID id): boolean
+delete(ID id): boolean
}

Cliente -- ClienteRepository: almacena <
Cuenta -- CuentaRepository: almacena <

Cliente "1" - "N" Cuenta
Cliente <|-- Natural: hereda
Cliente <|-- Empresa: hereda
Cuenta <|-- Ahorro: hereda
Cuenta <|-- Corriente: hereda

RepositoryInterface <|-- Repository: implementa
Repository <|-- ClienteRepository: hereda
Repository <|-- CuentaRepository: hereda

PersistenciaInterface <|. Persistencia
Persistencia <|-- PersistenciaCliente: hereda
Persistencia <|-- PersistenciaCuenta: hereda

GestionUseCase <|.. GestionClienteModel: implementa
GestionUseCase <|.. GestionCuentaModel: implementa

PersistenciaCliente -- GestionClienteModel: usa <
PersistenciaCuenta -- GestionCuentaModel: usa <

ClienteRepository -- GestionClienteModel: usa <
CuentaRepository -- GestionCuentaModel: usa <
@enduml